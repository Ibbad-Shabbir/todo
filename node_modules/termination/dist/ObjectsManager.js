"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _uuid = require("uuid");

var _TransitionManager = _interopRequireDefault(require("./TransitionManager"));

var _Object2 = _interopRequireDefault(require("./Object"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ObjectsManager {
  constructor() {
    _defineProperty(this, "remove", key => () => {
      delete this.objects[key];
    });

    _defineProperty(this, "transition", key => (steps, options) => {
      var object = this.objects[key];
      return this.TransitionManager.Transition(object, steps, options);
    });

    this.TransitionManager = new _TransitionManager.default();
    this.objects = {};
  }

  /**
   * External
   */
  getObjects(timePassed) {
    this.TransitionManager.applyAll(timePassed);
    return this.objects;
  }

  add() {
    var key = (0, _uuid.v4)();

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var ObjectInstance = new _Object2.default(...args, this.remove(key), this.transition(key));
    this.objects[key] = ObjectInstance;
    return ObjectInstance;
  }

  pause() {
    return this.TransitionManager.pauseAll(true);
  }

  resume() {
    return this.TransitionManager.resumeAll(true);
  }

  pauseAllTransitions() {
    return this.TransitionManager.pauseAll();
  }

  resumeAllTransitions() {
    return this.TransitionManager.resumeAll();
  }

  end() {
    return this.TransitionManager.endAll();
  }

}

exports.default = ObjectsManager;